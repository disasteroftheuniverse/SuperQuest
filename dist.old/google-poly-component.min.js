/*! For license information please see google-poly-component.min.js.LICENSE.txt */
!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=9)}({9:function(e,t){e.exports={system:AFRAME.registerSystem("google-poly",{schema:{type:"string"},__getAsset:function(e,t){if(null==THREE.Cache.get(e))this.__loadAsset(e,t);else{var n=THREE.Cache.get(e);this._create(n,t,e)}},_create:function(e,t){e.updateMatrixWorld(!0);var n=new THREE.Vector3,o=new THREE.Vector3,r=(new THREE.Box3).setFromObject(e);r.getSize(n);var s=Math.max.apply(Math,[n.x,n.y,n.z]);e.scale.multiplyScalar(1/s),e.scale.multiplyScalar(t.components.poly.data.size),r.setFromObject(e),r.getCenter(o),e.position.sub(o);var i=new THREE.Object3D;i.add(e),t.setObject3D("mesh",i)},__loadAsset:function(e,t){const n=this.data;var o=this,r=`https://poly.googleapis.com/v1/assets/${e}/?key=${n}`,s=new XMLHttpRequest;s.open("GET",r,!0),s.addEventListener("load",(function(n){var r,s,i,a,l,c=JSON.parse(n.target.response),u=function(e){return c.formats.find(t=>t.formatType===e)};if(null==u("GLTF2"))if(console.warn("Cannot load model as GLTF. Attempting to load OBJ"),null==u("OBJ"))console.error("Only GLTF and OBJ are supported at this time");else{var d=u("OBJ");s=(r=d).root,i=r.resources.find(e=>e.url.endsWith("mtl")),a=s.url.slice(0,s.url.indexOf(s.relativePath)),(l=new THREE.MTLLoader).setCrossOrigin(!0),l.setMaterialOptions({ignoreZeroRGBs:!0}),l.setTexturePath(a),l.load(i.url,(function(n){var r=new THREE.OBJLoader;r.setMaterials(n),r.load(s.url,(function(n){THREE.Cache.add(e,n),o._create(n,t,e)}))}))}else!function(n){var r=n.root,s=new THREE.GLTFLoader;s.setCrossOrigin(!0),s.load(r.url,(function(n){THREE.Cache.add(e,n.scene),o._create(n.scene,t,e)}),(function(e){console.log(e.loaded/e.total*100+"% loaded")}),(function(e){console.error(e)}))}(u("GLTF2"))})),s.send(null)},init:function(){THREE.Cache.enabled=!0,this.__getAsset=this.__getAsset.bind(this),this.__loadAsset=this.__loadAsset.bind(this),this._create=this._create.bind(this)}}),component:AFRAME.registerComponent("poly",{schema:{src:{type:"string",default:"5vbJ5vildOq"},size:{type:"number",default:1}},init:function(){var e=this.el,t=this.data;this.system=this.el.sceneEl.systems["google-poly"],this.system.__getAsset(t.src,e)}}),primitive:AFRAME.registerPrimitive("a-poly",{defaultComponents:{position:{x:0,y:0,z:0},scale:{x:1,y:1,z:1},poly:{size:1,align:"center"}},mappings:{src:"poly.src",size:"poly.size"}})}}});